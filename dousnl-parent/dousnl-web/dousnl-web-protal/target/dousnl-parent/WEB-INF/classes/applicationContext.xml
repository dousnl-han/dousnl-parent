<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:repository="http://www.springframework.org/schema/data/repository"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/data/repository http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd
		http://code.alibabatech.com/schema/dubbo
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd"
default-lazy-init="true">
    
	<description>Spring公共配置 </description>
    <!-- <import resource="activemqSpring.xml"/> -->
    <!-- <import resource="mybatis/mybatis-config.xml"/> -->
    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->  
    <dubbo:application name="dousnl-web-protal"  />
      
    <!-- 使用multicast广播注册中心暴露发现服务地址  --> 
    <dubbo:registry address="zookeeper://localhost:2181" />
    
    <!-- 用dubbo协议在20880端口暴露服务 -->  
    <dubbo:protocol name="dubbo" port="20880" />  
  
    
    <!-- 生成远程服务代理，可以和本地bean一样使用demoService -->
    <!-- dubbo注解已写入代码reference，故此处不需要再写dubbo:reference的配置，
         会自动去注册中心，注入相关注解的消费者的信息  -->
    <!-- <dubbo:reference id="helloService"  interface="com.dousnl.api.service.HelloService" /> -->
    
    <dubbo:annotation package="com.dousnl" />
    
    <!-- dubbo注解已写入代码service，故此处不需要再写dubbo:service的配置，
         会自动去注册中心，注入相关注解的生产者的信息  -->
    <!-- <dubbo:service interface="com.dousnl.dubbo.ProviderService" ref="providerService" protocol="dubbo"/> -->
    
    <!-- <dubbo:provider timeout="10000" group="protal"/> -->
    
    <dubbo:consumer timeout="10000" retries="0" check="false" group="member" /> 
    <!-- 扫描注解包路径，多个包用逗号分隔，不填pacakge表示扫描当前ApplicationContext中所有的类 -->
	
	<!--具体实现该接口的 bean-->
    <!-- <bean id="providerService" class="com.dousnl.dubbo.ProviderServiceImpl"/> -->
	
</beans>