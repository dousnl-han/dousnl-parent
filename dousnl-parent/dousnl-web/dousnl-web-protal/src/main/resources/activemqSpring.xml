<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:amq="http://activemq.apache.org/schema/core"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd"
default-lazy-init="true">
    
	<description>Spring-activeMq配置</description>

    <!-- 指明需要进行annotation扫描的包 -->
	<context:component-scan
		base-package="com.dousnl.activemq" use-default-filters="true">
	</context:component-scan>
	
	
    <!-- ActiveMQ 连接工厂
    真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供
    如果连接网络：tcp://ip:61616；未连接网络：tcp://localhost:61616 以及用户名，密码 -->
    <amq:connectionFactory id="amqConnectionFactory"
        brokerURL="tcp://localhost:61616" userName="admin" password="admin"  />

    <!-- Spring Caching连接工厂
    Spring用于管理真正的ConnectionFactory的ConnectionFactory -->  
    <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->  
        <property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
        <!-- 同上，同理 -->
        <constructor-arg ref="amqConnectionFactory" />
        <!-- Session缓存数量 -->
        <property name="sessionCacheSize" value="100" />
    </bean>

    <!-- Spring JmsTemplate 的消息生产者 start -->

   <!--  定义JmsTemplate的Queue类型属性开始 -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象  --> 
        <constructor-arg ref="connectionFactory" />
        <!-- 非pub/sub模型（发布/订阅），即队列模式 -->
        <property name="pubSubDomain" value="false" />
        <property name="defaultDestination" ref="destination"></property> 
        <property name="sessionAcknowledgeMode" value="2"></property> 
    </bean>
    <!-- 配置消息默认目的地 -->
    <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
       <constructor-arg index="0" value="save.user"/>
    </bean>
    <!--  定义JmsTemplate的Topic类型 -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
         <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <constructor-arg ref="connectionFactory" />
        <!-- pub/sub模型（发布/订阅） -->
        <property name="pubSubDomain" value="true" />
        <property name="defaultDestination" ref="destination"></property>
    </bean>
    <!-- 定义JmsTemplate的Queue类型属性结束 -->

    
    
    
    
    <!-- jms命名空间形式 消息消费者开始 -->
   <!--  定义Queue监听器auto, client, dups-ok, transacted -->
    <jms:listener-container destination-type="queue" container-type="default" connection-factory="connectionFactory" acknowledge="client">
        <jms:listener destination="save.user" ref="queueReceiver1"/>
        <jms:listener destination="test.queue" ref="queueReceiver2"/>
    </jms:listener-container>

    <!-- 定义Topic监听器 -->
    <jms:listener-container destination-type="topic" container-type="default" connection-factory="connectionFactory" acknowledge="client">
        <jms:listener destination="test.topic" ref="topicReceiver1"/>
        <jms:listener destination="test.topic" ref="topicReceiver2"/>
    </jms:listener-container>
    <!-- jms命名空间形式 消息消费者结束 -->
    
    
    <!-- 消息监听器类 -->  
    <bean id="queueReceiver1" class="com.dousnl.activemq.spring.listener.QueueReceiver1" />
    <bean id="queueReceiver2" class="com.dousnl.activemq.spring.listener.QueueReceiver2" />
	<!-- spring配置形式  消息监听容器开始  -->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
	        <property name="connectionFactory" ref="connectionFactory"/>  
	        <property name="destinationName" value="save.user"/>
	        <property name="messageListener" ref="queueReceiver1"/>
	        <property name="sessionAcknowledgeMode" value="4"/>
	</bean>
	<bean id="jmsContainer1" class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
	        <property name="connectionFactory" ref="connectionFactory"/>  
	        <property name="destinationName" value="test.user"/>
	        <property name="messageListener" ref="queueReceiver2"/>
	        <property name="sessionAcknowledgeMode" value="1"/>
	</bean>
	<!-- spring配置形式  消息监听容器结束  -->
	
	
	
	
	<!-- 配置多个监听器例子开始 -->
	 <!-- 第一个消息监听器 -->  
    <bean id="orderMessageListener" class="com.vveplat.message.queue.listener.OrderMessageListener">  
         <property name="messageConverter" ref="emailMessageConverter"/> 
    </bean>  
    <!-- 第二个消息监听器 -->  
    <bean id="registerValueIndexMessageListener" class="com.vveplat.message.queue.listener.RegisterValueIndexMessageListener">  
         <property name="messageConverter" ref="emailMessageConverter"/>
    </bean>  
    <!-- 第一个消息监听容器 -->  
    <bean id="jmsContainer"  
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="connectionFactory" />  
        <property name="destination" ref="orderQueueDestination" />  
        <property name="messageListener" ref="orderMessageListener" />  
          
        <property name="sessionTransacted" value="false"></property>    
        <!-- 设置固定的线程数 -->    
        <property name="concurrentConsumers" value="6"></property>    
        <!-- 设置动态的线程数 -->    
        <property name="concurrency" value="2-9"></property>    
        <!-- 设置最大的线程数   -->  
        <property name="maxConcurrentConsumers" value="15"></property>   
           
    </bean>  
    <!-- 第二个消息监听容器 -->  
    <bean id="jmsContainer1"  
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">  
        <property name="connectionFactory" ref="connectionFactory" />  
        <property name="destination" ref="registerValueIndexQueueDestination" />  
        <property name="messageListener" ref="registerValueIndexMessageListener" />  
          
        <property name="sessionTransacted" value="false"></property>    
        <!-- 设置固定的线程数 -->    
        <property name="concurrentConsumers" value="6"></property>    
        <!-- 设置动态的线程数 -->    
        <property name="concurrency" value="2-9"></property>    
        <!-- 设置最大的线程数 -->    
        <property name="maxConcurrentConsumers" value="15"></property>   
    </bean>
    <!-- 配置多个监听器例子结束 -->
</beans>